#if PLAYMAKER
using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;
using HutongGames.PlayMaker.Actions;
using HutongGames.PlayMaker;
using UnityEngine;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================


		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		[ActionCategory("BansheeGz")]
		[HutongGames.PlayMaker.Tooltip("Fetch row data for MyTable meta from GameRepo database by row's id")]
		public partial class MyTableGetById : FsmStateAction
		{
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4650564587387139656,5790520138910642877));
					return _metaDefault;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
			public static BansheeGz.BGDatabase.BGFieldEntityName _name
			{
				get
				{
					if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4852341910933812809,17293514567767541685));
					return _ufle12jhs77_name;
				}
			}
			[RequiredField]
			[HutongGames.PlayMaker.Tooltip("Entity id")]
			public FsmString _Id;
			[UIHint(UIHint.Variable)]
			public FsmString name;
			[UIHint(UIHint.Variable)]
			[HutongGames.PlayMaker.Tooltip("Entity index")]
			public FsmInt _Index;
			public override void Reset()
			{
				_Id = null;
				_Index = null;
				name = null;
			}
			public override void OnEnter()
			{
				if (_Id.IsNone || _Id.Value==null)
				{
					Debug.LogWarning("Required field _Id is not set");
					return;
				}
				var id = BGId.Empty;
				try
				{
					id = new BGId(_Id.Value);
				}
				catch
				{
					Debug.LogWarning("Unable to parse id " + _Id.Value);
					return;
				}
				var entity = MetaDefault[id];
				if (entity == null)
				{
					Debug.LogWarning("No entity found, id=" + id);
					return;
				}
				var index = entity.Index;
				if(!_Index.IsNone)
				{
					_Index.Value = index;
				}
				if(!name.IsNone)
				{
					name.Value = _name[index];
				}
				Finish();
			}
		}


		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		[ActionCategory("BansheeGz")]
		[HutongGames.PlayMaker.Tooltip("Set row data for MyTable meta from GameRepo database by row's id")]
		public partial class MyTableSetById : FsmStateAction
		{
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4650564587387139656,5790520138910642877));
					return _metaDefault;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
			public static BansheeGz.BGDatabase.BGFieldEntityName _name
			{
				get
				{
					if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4852341910933812809,17293514567767541685));
					return _ufle12jhs77_name;
				}
			}
			[RequiredField]
			[HutongGames.PlayMaker.Tooltip("Entity id")]
			public FsmString _Id;
			public FsmString name;
			public override void Reset()
			{
				name = null;
			}
			public override void OnEnter()
			{
				if (_Id.IsNone || _Id.Value==null)
				{
					Debug.LogWarning("Required field _Id is not set");
					return;
				}
				var id = BGId.Empty;
				try
				{
					id = new BGId(_Id.Value);
				}
				catch
				{
					Debug.LogWarning("Unable to parse id " + _Id.Value);
					return;
				}
				var entity = MetaDefault[id];
				if (entity == null)
				{
					Debug.LogWarning("No entity found, id=" + id);
					return;
				}
				var index = entity.Index;
				if(!name.IsNone)
				{
					_name[index] = name.Value;
				}
				Finish();
			}
		}


		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		[ActionCategory("BansheeGz")]
		[HutongGames.PlayMaker.Tooltip("Fetch row data for MyTable meta from GameRepo database by row's index")]
		public partial class MyTableGetByIndex : FsmStateAction
		{
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4650564587387139656,5790520138910642877));
					return _metaDefault;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
			public static BansheeGz.BGDatabase.BGFieldEntityName _name
			{
				get
				{
					if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4852341910933812809,17293514567767541685));
					return _ufle12jhs77_name;
				}
			}
			[RequiredField]
			[HutongGames.PlayMaker.Tooltip("Entity index")]
			public FsmInt _Index;
			[UIHint(UIHint.Variable)]
			public FsmString name;
			[UIHint(UIHint.Variable)]
			[HutongGames.PlayMaker.Tooltip("Entity id")]
			public FsmString _Id;
			public override void Reset()
			{
				_Id = null;
				_Index = null;
				name = null;
			}
			public override void OnEnter()
			{
				if (_Index.IsNone)
				{
					Debug.LogWarning("Required field _Index is not set");
					return;
				}
				var index = _Index.Value;
				if(!_Id.IsNone)
				{
					_Id.Value = MetaDefault.GetEntity(index).Id.ToString();
				}
				if(!name.IsNone)
				{
					name.Value = _name[index];
				}
				Finish();
			}
		}


		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		[ActionCategory("BansheeGz")]
		[HutongGames.PlayMaker.Tooltip("Set row data for MyTable meta from GameRepo database by row's index")]
		public partial class MyTableSetByIndex : FsmStateAction
		{
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4650564587387139656,5790520138910642877));
					return _metaDefault;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
			public static BansheeGz.BGDatabase.BGFieldEntityName _name
			{
				get
				{
					if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4852341910933812809,17293514567767541685));
					return _ufle12jhs77_name;
				}
			}
			[RequiredField]
			[HutongGames.PlayMaker.Tooltip("Entity index")]
			public FsmInt _Index;
			public FsmString name;
			public override void Reset()
			{
				name = null;
			}
			public override void OnEnter()
			{
				if (_Index.IsNone)
				{
					Debug.LogWarning("Required field _Index is not set");
					return;
				}
				var index = _Index.Value;
				if(!name.IsNone)
				{
					_name[index] = name.Value;
				}
				Finish();
			}
		}


		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		[ActionCategory("BansheeGz")]
		[HutongGames.PlayMaker.Tooltip("Fetch row data for MyTable meta from GameRepo database by row's name")]
		public partial class MyTableGetByName : FsmStateAction
		{
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4650564587387139656,5790520138910642877));
					return _metaDefault;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
			public static BansheeGz.BGDatabase.BGFieldEntityName _name
			{
				get
				{
					if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4852341910933812809,17293514567767541685));
					return _ufle12jhs77_name;
				}
			}
			[RequiredField]
			[HutongGames.PlayMaker.Tooltip("Entity Name")]
			public FsmString _Name;
			[UIHint(UIHint.Variable)]
			public FsmString name;
			[UIHint(UIHint.Variable)]
			[HutongGames.PlayMaker.Tooltip("Entity index")]
			public FsmInt _Index;
			[UIHint(UIHint.Variable)]
			[HutongGames.PlayMaker.Tooltip("Entity id")]
			public FsmString _Id;
			public override void Reset()
			{
				_Id = null;
				_Index = null;
				_Name=null;
				name = null;
			}
			public override void OnEnter()
			{
				if (_Name.IsNone)
				{
					Debug.LogWarning("Required field _Name is not set");
					return;
				}
				var meta = BGRepo.I.GetMeta("MyTable");
				if (meta == null)
				{
					Debug.LogWarning("No meta found, name=MyTable");
					return;
				}
				var entity = meta[_Name.Value];
				if (entity == null)
				{
					Debug.LogWarning("No entity found, name=" + _Name.Value);
					return;
				}
				var index = entity.Index;
				if(!_Index.IsNone)
				{
					_Index.Value = index;
				}
				if(!_Id.IsNone)
				{
					_Id.Value = entity.Id.ToString();
				}
				if(!name.IsNone)
				{
					name.Value = _name[index];
				}
				Finish();
			}
		}


		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		[ActionCategory("BansheeGz")]
		[HutongGames.PlayMaker.Tooltip("Set row data for MyTable meta from GameRepo database by row's name")]
		public partial class MyTableSetByName : FsmStateAction
		{
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4650564587387139656,5790520138910642877));
					return _metaDefault;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
			public static BansheeGz.BGDatabase.BGFieldEntityName _name
			{
				get
				{
					if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4852341910933812809,17293514567767541685));
					return _ufle12jhs77_name;
				}
			}
			[RequiredField]
			[HutongGames.PlayMaker.Tooltip("Entity Name")]
			public FsmString _Name;
			public FsmString name;
			public override void Reset()
			{
				_Name=null;
				name = null;
			}
			public override void OnEnter()
			{
				if (_Name.IsNone)
				{
					Debug.LogWarning("Required field _Name is not set");
					return;
				}
				var meta = BGRepo.I.GetMeta("MyTable");
				if (meta == null)
				{
					Debug.LogWarning("No meta found, name=MyTable");
					return;
				}
				var entity = meta[_Name.Value];
				if (entity == null)
				{
					Debug.LogWarning("No entity found, name=" + _Name.Value);
					return;
				}
				var index = entity.Index;
				if(!name.IsNone)
				{
					_name[index] = name.Value;
				}
				Finish();
			}
		}


		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		[ActionCategory("BansheeGz")]
		[HutongGames.PlayMaker.Tooltip("Get the number of rows for MyTable meta")]
		public partial class MyTableCount : FsmStateAction
		{
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4650564587387139656,5790520138910642877));
					return _metaDefault;
				}
			}
			[UIHint(UIHint.Variable)]
			[HutongGames.PlayMaker.Tooltip("Entities count")]
			public FsmInt Count;
			public override void OnEnter()
			{
				if(Count != null)
				{
					Count.Value = MetaDefault.CountEntities;
				}
				Finish();
			}
			public override void Reset()
			{
				Count = null;
			}
		}


		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		[ActionCategory("BansheeGz")]
		[HutongGames.PlayMaker.Tooltip("Create new row")]
		public partial class MyTableCreate : FsmStateAction
		{
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4650564587387139656,5790520138910642877));
					return _metaDefault;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
			public static BansheeGz.BGDatabase.BGFieldEntityName _name
			{
				get
				{
					if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4852341910933812809,17293514567767541685));
					return _ufle12jhs77_name;
				}
			}
			public FsmString name;
			[UIHint(UIHint.Variable)]
			[HutongGames.PlayMaker.Tooltip("Entity index")]
			public FsmInt _Index;
			public override void Reset()
			{
				name = null;
			}
			public override void OnEnter()
			{
				var entity = MetaDefault.NewEntity();
				var index = entity.Index;
				if(!_Index.IsNone)
				{
					_Index.Value = index;
				}
				if(!name.IsNone)
				{
					_name[index] = name.Value;
				}
				Finish();
			}
		}


		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		[ActionCategory("BansheeGz")]
		[HutongGames.PlayMaker.Tooltip("Delete the row by its index for MyTable meta")]
		public partial class MyTableDelete : FsmStateAction
		{
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4650564587387139656,5790520138910642877));
					return _metaDefault;
				}
			}
			[RequiredField]
			[HutongGames.PlayMaker.Tooltip("Entity index")]
			public FsmInt _Index;
			public override void OnEnter()
			{
				if (_Index.IsNone)
				{
					Debug.LogWarning("Required field _Index is not set");
					return;
				}
				if (_Index.Value < 0)
				{
					Debug.LogWarning("Unable to delete, index is less than zero: " + _Index.Value);
					return;
				}
				if (_Index.Value >= MetaDefault.CountEntities)
				{
					Debug.LogWarning("Unable to delete, index is equal or greater than number of rows: " + _Index.Value +">=" + MetaDefault.CountEntities);
					return;
				}
				var entity = MetaDefault.GetEntity(_Index.Value);
				entity.Delete();
				Finish();
			}
			public override void Reset()
			{
				_Index = null;
			}
		}

#endif
